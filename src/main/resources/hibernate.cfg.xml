<hibernate-configuration>
	<session-factory>
		<!-- JDBC database connection settings -->
		<property name="hibernate.connection.driver_class">org.mariadb.jdbc.Driver</property>
		<property name="hibernate.connection.url">jdbc:mariadb://localhost:3306/project_1</property> 
		<!-- <property name="hibernate.connection.url">jdbc:mariadb://database-1.cg73hzcwzpav.us-east-2.rds.amazonaws.com:3306/project0</property> -->
		
		<!-- SQL Dialect -->
		<property name="hibernate.dialect">org.hibernate.dialect.MariaDB103Dialect</property>
		
		<!-- Show generated SQL queries -->
		<property name="show_sql">false</property>
		
		
		<!-- Used to create, update, or validate database schema -->
		<!-- Possible options:
		1. create - creates new database tables based on existing class mappings. If the tables already exist,
		it will drop the existing tables and recreate them
		2. update - update the existing tables to match the class mappings
		3. validate - validate existing tables against class mappings. If validation fails, application will not work
		properly
		4. create-drop - same as create, but will drop all tables once SessionFactory is closed -->
		<property name="hbm2ddl.auto">validate</property>
		<property name="hibernate.current_session_context_class">thread</property>
		
		
		<!-- Specify our entity/class mappings here -->
		<mapping class="com.revature.model.User"></mapping>
		<mapping class="com.revature.model.UserRole"></mapping>
		<mapping class="com.revature.model.Reimbursement"></mapping>
		<mapping class="com.revature.model.ReimbursementStatus"></mapping>
		<mapping class="com.revature.model.ReimbursementType"></mapping>
	</session-factory>
</hibernate-configuration>